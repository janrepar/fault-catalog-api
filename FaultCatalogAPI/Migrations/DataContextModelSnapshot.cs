// <auto-generated />
using FaultCatalogAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FaultCatalogAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("FaultCatalogAPI.Models.Fault", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Faults");
                });

            modelBuilder.Entity("FaultCatalogAPI.Models.SuccessCriterion", b =>
                {
                    b.Property<string>("RefId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RefId");

                    b.ToTable("SuccessCriteria");
                });

            modelBuilder.Entity("FaultSuccessCriterion", b =>
                {
                    b.Property<long>("FaultsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SuccessCriterionsRefId")
                        .HasColumnType("TEXT");

                    b.HasKey("FaultsId", "SuccessCriterionsRefId");

                    b.HasIndex("SuccessCriterionsRefId");

                    b.ToTable("FaultSuccessCriterion");
                });

            modelBuilder.Entity("FaultSuccessCriterion", b =>
                {
                    b.HasOne("FaultCatalogAPI.Models.Fault", null)
                        .WithMany()
                        .HasForeignKey("FaultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FaultCatalogAPI.Models.SuccessCriterion", null)
                        .WithMany()
                        .HasForeignKey("SuccessCriterionsRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
